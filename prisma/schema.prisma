generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("SRC_DATABASE_URL")
}

model admin_users {
  id             Int    @id @default(autoincrement())
  fname          String @default("") @db.VarChar(155)
  lname          String @default("") @db.VarChar(155)
  email          String @default("") @db.VarChar(155)
  user           String @default("") @db.VarChar(155)
  password       String @default("") @db.VarChar(155)
  account_access String @default("") @db.VarChar(155)
  proofer        Int    @default(0) @db.TinyInt
}

model airlines {
  id                Int    @id @default(autoincrement())
  name              String @db.VarChar(255)
  country_id        Int
  airline_id        Int
  destination_id    Int
  url               String @db.VarChar(255)
  photo             String @db.VarChar(255)
  photo_headline    String @db.VarChar(40)
  photo_subtext     String @db.VarChar(55)
  deals_description String @db.Text
  overview          String @db.Text
  active            Int    @db.TinyInt
}

model airports {
  id             Int    @id @default(autoincrement()) @db.UnsignedInt
  name           String @db.VarChar(255)
  city           String @db.VarChar(255)
  state          String @db.VarChar(255)
  stAbbv         String @db.VarChar(2)
  addRef         String @db.VarChar(255)
  Country        String @db.VarChar(255)
  IATA           String @unique(map: "airports_iata_unique") @db.VarChar(3)
  latitude       Float
  longiture      Float
  altitude       Int
  timezone       Int
  dst            String @db.VarChar(1)
  group          String @db.VarChar(3)
  priority       Int
  citypopulation Int

  @@index([priority], map: "airports_priority_index")
}

model countries {
  pk_country_id Int    @id @db.UnsignedInt
  ccode         String @default("") @db.VarChar(2)
  country       String @default("") @db.VarChar(200)

  @@index([ccode], map: "ccode")
}

model ctlocation {
  id              Int    @id @db.UnsignedInt
  name            String @db.VarChar(255)
  lat             Float  @db.Float
  lng             Float  @db.Float
  address         String @db.VarChar(255)
  city_name       String @db.VarChar(100)
  country_code    String @db.VarChar(2)
  airport         Int    @db.UnsignedTinyInt
  airport_code    String @db.VarChar(10)
  railway_station Int    @db.UnsignedTinyInt

  @@index([address], map: "address")
  @@index([name], map: "name")
}

model destination_links {
  pk_dlink_id       Int    @id @default(autoincrement()) @db.UnsignedInt
  dlink_url         String @db.VarChar(255)
  dlink_text        String @db.VarChar(255)
  dlink_type        String @db.VarChar(20)
  dlink_sort_order  Int
  fk_destination_id Int    @db.UnsignedInt
}

model destination_profiles {
  pk_profile_id               Int    @id @default(autoincrement()) @db.UnsignedInt
  fk_user_id                  Int
  profile_type                String @db.VarChar(10)
  profile_name                String @db.VarChar(255)
  profile_url                 String @db.VarChar(255)
  profile_publish             Int    @default(0) @db.TinyInt
  profile_deals_photo         String @db.VarChar(255)
  profile_photo_headline      String @db.VarChar(40)
  profile_photo_subtext       String @db.VarChar(55)
  profile_deals_description   String @db.Text
  profile_dpath_region        Int    @db.UnsignedInt
  profile_dpath_country       Int    @db.UnsignedInt
  profile_dpath_state         Int    @db.UnsignedInt
  profile_dpath_final         Int    @db.UnsignedInt
  profile_opath_region        Int    @db.UnsignedInt
  profile_opath_country       Int    @db.UnsignedInt
  profile_opath_state         Int    @db.UnsignedInt
  profile_opath_final         Int    @db.UnsignedInt
  profile_opath_type          String @db.VarChar(20)
  profile_overview            String @db.Text
  profile_address_info        String @db.Text
  profile_is_active           Int    @default(0) @db.TinyInt
  fk_destination_id           Int    @db.UnsignedInt
  fk_origin_id                Int    @db.UnsignedInt
  more_info_description       String @db.VarChar(255)
  do_link_to_airport          Int    @db.TinyInt
  do_hide_airport             Int    @db.TinyInt
  nearby_hotels_description   String @db.VarChar(255)
  do_link_to_hotels           Int    @db.TinyInt
  do_link_to_hotels_main      Int    @db.TinyInt
  car_rentals_description     String @db.VarChar(255)
  do_link_to_car_rentals      Int    @db.TinyInt
  do_link_to_car_rentals_main Int    @db.TinyInt
  include_in_footer           Int    @default(0) @db.TinyInt
  include_in_hp_footer        Int    @default(0) @db.TinyInt
  quote_search_form           Int    @default(0) @db.TinyInt
  flights_to_description      String @db.Text
  do_link_to_flights          Int    @default(0) @db.TinyInt
  do_link_to_flights_main     Int    @default(0) @db.TinyInt
  do_link_to_business_class   String @default("0") @db.VarChar(4)
  airlines_description        String @db.VarChar(255)
  do_link_to_airlines         Int    @default(0) @db.TinyInt

  @@index([fk_destination_id], map: "fk_destination_id")
  @@index([fk_user_id], map: "fk_user_id")
  @@index([profile_type], map: "profile_type")
  @@index([profile_url], map: "profile_url")
}

model destinations {
  pk_destination_id             Int    @id @default(autoincrement()) @db.UnsignedInt
  fk_user_id                    Int    @db.UnsignedInt
  destination_name              String @db.VarChar(255)
  fk_destination_for            Int    @db.UnsignedInt
  path_region                   Int    @db.UnsignedInt
  path_final                    Int    @db.UnsignedInt
  path_country                  Int    @db.UnsignedInt
  path_state                    Int    @db.UnsignedInt
  destination_url               String @db.VarChar(255)
  destination_publish           Int    @default(0) @db.TinyInt
  destination_deals_photo       String @db.VarChar(255)
  destination_photo_headline    String @db.VarChar(40)
  destination_photo_subtext     String @db.VarChar(55)
  destination_deals_description String @db.Text
  destination_overview          String @db.Text
  destination_type              String @db.VarChar(20)
  destination_active            Int    @default(0) @db.TinyInt

  @@index([destination_url], map: "destination_url")
  @@index([fk_user_id, fk_destination_for], map: "fk_user_id")
}

model featured_links {
  pk_flink_id             Int    @id @default(autoincrement()) @db.UnsignedInt
  flink_url               String @db.VarChar(255)
  flink_text              String @db.VarChar(255)
  flink_type              String @db.VarChar(20)
  flink_sort_order        Int    @default(0)
  flink_active            Int    @db.TinyInt
  flink_ft                Int    @default(0) @db.TinyInt
  flink_bc                Int    @default(0) @db.TinyInt
  flink_hp                String @default("0") @db.VarChar(4)
  flink_a                 Int    @default(0) @db.TinyInt
  flink_h                 Int    @default(0) @db.TinyInt
  flink_rc                Int    @default(0) @db.TinyInt
  flink_mf                Int    @default(0) @db.TinyInt
  flink_mb                Int    @default(0) @db.TinyInt
  flink_mh                Int    @default(0) @db.TinyInt
  flink_mc                Int    @default(0) @db.TinyInt
  fk_profile_id           Int    @db.UnsignedInt
  fk_featured_profile_id  Int    @db.UnsignedInt
  flink_global_sort_order Int    @default(0)
}

model isocountry {
  id           Int    @id @default(autoincrement()) @db.UnsignedInt
  country_code String @db.VarChar(2)
  dialing_code String @db.VarChar(10)
  currency     String @db.VarChar(10)
  name         String @db.VarChar(255)
}

model jstz_commentmeta {
  meta_id    BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  comment_id BigInt  @default(0) @db.UnsignedBigInt
  meta_key   String? @db.VarChar(255)
  meta_value String? @db.LongText

  @@index([comment_id], map: "comment_id")
  @@index([meta_key], map: "meta_key")
}

model jstz_comments {
  comment_ID           BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  comment_post_ID      BigInt   @default(0) @db.UnsignedBigInt
  comment_author       String   @db.TinyText
  comment_author_email String   @default("") @db.VarChar(100)
  comment_author_url   String   @default("") @db.VarChar(200)
  comment_author_IP    String   @default("") @db.VarChar(100)
  comment_date         DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  comment_date_gmt     DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  comment_content      String   @db.Text
  comment_karma        Int      @default(0)
  comment_approved     String   @default("1") @db.VarChar(20)
  comment_agent        String   @default("") @db.VarChar(255)
  comment_type         String   @default("") @db.VarChar(20)
  comment_parent       BigInt   @default(0) @db.UnsignedBigInt
  user_id              BigInt   @default(0) @db.UnsignedBigInt

  @@index([comment_approved], map: "comment_approved")
  @@index([comment_approved, comment_date_gmt], map: "comment_approved_date_gmt")
  @@index([comment_date_gmt], map: "comment_date_gmt")
  @@index([comment_parent], map: "comment_parent")
  @@index([comment_post_ID], map: "comment_post_ID")
}

model jstz_links {
  link_id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  link_url         String   @default("") @db.VarChar(255)
  link_name        String   @default("") @db.VarChar(255)
  link_image       String   @default("") @db.VarChar(255)
  link_target      String   @default("") @db.VarChar(25)
  link_description String   @default("") @db.VarChar(255)
  link_visible     String   @default("Y") @db.VarChar(20)
  link_owner       BigInt   @default(1) @db.UnsignedBigInt
  link_rating      Int      @default(0)
  link_updated     DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  link_rel         String   @default("") @db.VarChar(255)
  link_notes       String   @db.MediumText
  link_rss         String   @default("") @db.VarChar(255)

  @@index([link_visible], map: "link_visible")
}

model jstz_ngg_album {
  id         BigInt  @id @default(autoincrement())
  name       String  @db.VarChar(255)
  slug       String  @db.VarChar(255)
  previewpic BigInt  @default(0)
  albumdesc  String? @db.MediumText
  sortorder  String  @db.LongText
  pageid     BigInt  @default(0)
}

model jstz_ngg_gallery {
  gid        BigInt  @id @default(autoincrement())
  name       String  @db.VarChar(255)
  slug       String  @db.VarChar(255)
  path       String? @db.MediumText
  title      String? @db.MediumText
  galdesc    String? @db.MediumText
  pageid     BigInt  @default(0)
  previewpic BigInt  @default(0)
  author     BigInt  @default(0)
}

model jstz_ngg_pictures {
  pid         BigInt   @id @default(autoincrement())
  image_slug  String   @db.VarChar(255)
  post_id     BigInt   @default(0)
  galleryid   BigInt   @default(0)
  filename    String   @db.VarChar(255)
  description String?  @db.MediumText
  alttext     String?  @db.MediumText
  imagedate   DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  exclude     Int?     @default(0) @db.TinyInt
  sortorder   BigInt   @default(0)
  meta_data   String?  @db.LongText

  @@index([post_id], map: "post_id")
}

model jstz_options {
  option_id    BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  blog_id      Int    @default(0)
  option_name  String @unique(map: "option_name") @default("") @db.VarChar(64)
  option_value String @db.LongText
  autoload     String @default("yes") @db.VarChar(20)
}

model jstz_postmeta {
  meta_id    BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  post_id    BigInt  @default(0) @db.UnsignedBigInt
  meta_key   String? @db.VarChar(255)
  meta_value String? @db.LongText

  @@index([meta_key], map: "meta_key")
  @@index([post_id], map: "post_id")
}

model jstz_posts {
  ID                    BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  post_author           BigInt   @default(0) @db.UnsignedBigInt
  post_date             DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  post_date_gmt         DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  post_content          String   @db.VarChar(5000)
  post_title            String   @db.VarChar(5000)
  post_excerpt          String   @db.Text
  post_status           String   @default("publish") @db.VarChar(20)
  comment_status        String   @default("open") @db.VarChar(20)
  ping_status           String   @default("open") @db.VarChar(20)
  post_password         String   @default("") @db.VarChar(20)
  post_name             String   @default("") @db.VarChar(200)
  to_ping               String   @db.Text
  pinged                String   @db.Text
  post_modified         DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  post_modified_gmt     DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  post_content_filtered String   @db.Text
  post_parent           BigInt   @default(0) @db.UnsignedBigInt
  guid                  String   @default("") @db.VarChar(255)
  menu_order            Int      @default(0)
  post_type             String   @default("post") @db.VarChar(20)
  post_mime_type        String   @default("") @db.VarChar(100)
  comment_count         BigInt   @default(0)

  @@index([post_author], map: "post_author")
  @@index([post_name], map: "post_name")
  @@index([post_parent], map: "post_parent")
  @@index([post_type, post_status, post_date, ID], map: "type_status_date")
  @@index([post_content], map: "yarpp_content")
  @@index([post_title], map: "yarpp_title")
}

model jstz_term_relationships {
  object_id        BigInt @default(0) @db.UnsignedBigInt
  term_taxonomy_id BigInt @default(0) @db.UnsignedBigInt
  term_order       Int    @default(0)

  @@id([object_id, term_taxonomy_id])
  @@index([term_taxonomy_id], map: "term_taxonomy_id")
}

model jstz_term_taxonomy {
  term_taxonomy_id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  term_id          BigInt @default(0) @db.UnsignedBigInt
  taxonomy         String @default("") @db.VarChar(32)
  description      String @db.LongText
  parent           BigInt @default(0) @db.UnsignedBigInt
  count            BigInt @default(0)

  @@unique([term_id, taxonomy], map: "term_id_taxonomy")
  @@index([taxonomy], map: "taxonomy")
}

model jstz_terms {
  term_id    BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  name       String @default("") @db.VarChar(200)
  slug       String @unique(map: "slug") @default("") @db.VarChar(200)
  term_group BigInt @default(0)

  @@index([name], map: "name")
}

model jstz_usermeta {
  umeta_id   BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  user_id    BigInt  @default(0) @db.UnsignedBigInt
  meta_key   String? @db.VarChar(255)
  meta_value String? @db.LongText

  @@index([meta_key], map: "meta_key")
  @@index([user_id], map: "user_id")
}

model jstz_users {
  ID                  BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  user_login          String   @default("") @db.VarChar(60)
  user_pass           String   @default("") @db.VarChar(64)
  user_nicename       String   @default("") @db.VarChar(50)
  user_email          String   @default("") @db.VarChar(100)
  user_url            String   @default("") @db.VarChar(100)
  user_registered     DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  user_activation_key String   @default("") @db.VarChar(60)
  user_status         Int      @default(0)
  display_name        String   @default("") @db.VarChar(250)

  @@index([user_login], map: "user_login_key")
  @@index([user_nicename], map: "user_nicename")
}

model jstz_yarpp_keyword_cache {
  ID    BigInt   @id @default(0) @db.UnsignedBigInt
  body  String   @db.Text
  title String   @db.Text
  date  DateTime @default(now()) @db.Timestamp(0)
}

model jstz_yarpp_related_cache {
  reference_ID BigInt   @default(0) @db.UnsignedBigInt
  ID           BigInt   @default(0) @db.UnsignedBigInt
  score        Float    @default(0) @db.Float
  date         DateTime @default(now()) @db.Timestamp(0)

  @@id([reference_ID, ID])
  @@index([ID], map: "ID")
  @@index([score], map: "score")
}

model location_codes {
  id           Int    @id @default(autoincrement())
  airport_code String @unique(map: "airport_code") @db.VarChar(5)
  country_code String @db.Text
  region_code  String @db.Text
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model location_continent {
  continent String @db.Text
  country   String @db.Text

  @@ignore
}

model lp_templates {
  pk_template_id  Int     @id @default(autoincrement()) @db.UnsignedInt
  fk_user_id      Int     @db.UnsignedInt
  template_type   String  @db.VarChar(10)
  template_active Boolean @default(false)

  @@index([fk_user_id], map: "fk_user_ud")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model priceline_hotel_cities {
  cityid_ppn    Int?
  cityid_a      String?  @db.VarChar(6)
  cityid_b      String?  @db.VarChar(9)
  cityid_t      String?  @db.VarChar(10)
  city          String?  @db.VarChar(31)
  state         String?  @db.VarChar(35)
  country       String?  @db.VarChar(32)
  state_code    String?  @db.VarChar(2)
  country_code  String?  @db.VarChar(2)
  latitude      Decimal? @db.Decimal(29, 8)
  longitude     Decimal? @db.Decimal(29, 8)
  hotel_count   Int?
  mod_date_time String?  @db.VarChar(19)

  @@ignore
}

model profile_links {
  pk_plink_id      Int    @id @default(autoincrement()) @db.UnsignedInt
  plink_url        String @db.VarChar(255)
  plink_text       String @db.VarChar(255)
  plink_type       String @db.VarChar(20)
  plink_sort_order Int
  fk_profile_id    Int    @db.UnsignedInt
}

model regions {
  pk_region_id Int    @id @default(autoincrement())
  region_abbv  String @db.VarChar(10)
  region_name  String @db.VarChar(255)
}

model statenames {
  id   Int    @id @default(autoincrement())
  abbv String @db.Text
  name String @db.Text
}
